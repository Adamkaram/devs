#!/usr/bin/env bash

# Add Arabic (Egypt) input source
gsettings set org.gnome.desktop.input-sources sources "[('xkb', 'us'), ('xkb', 'eg')]"

echo "Arabic (Egypt) input source added successfully!"

# Set Alt+Q to switch input sources
gsettings set org.gnome.desktop.wm.keybindings switch-input-source "['<alt>q']"
gsettings set org.gnome.desktop.wm.keybindings switch-input-source-backward "['<shift><alt>q']"

echo "Input source switching shortcut set to Alt+Q"

#Install dependencies
sudo apt update
sudo add-apt-repository -y ppa:ubuntuhandbook1/mpv
sudo apt update
sudo apt install -y \
  mpv \
  google-chrome-stable \
  telegram-desktop \
  timeshift \
  goland \
  zig \
  libxcb-cursor \
  nodejs \
  npm \
  python3 \
  python3-pip \
  curl

# Install nvm
if [ ! -f "$HOME/.nvm/nvm.sh" ]; then
  echo "Installing nvm..."
  curl -o- https://raw.githubusercontent.com/nvm-sh/nvm/v0.40.1/install.sh | bash
  source "$HOME/.nvm/nvm.sh"
fi

# Install pnpm
npm install -g pnpm

# Install Bun
curl -fsSL https://bun.sh/install | bash

# Install nekoray
echo "Installing nekoray..."
wget https://github.com/Mahdi-zarei/nekoray/releases/download/4.2.7/nekoray-4.2.7-2024-12-04-debian-x64.deb
sudo dpkg -i nekoray-4.2.7-2024-12-04-debian-x64.deb
rm nekoray-4.2.7-2024-12-04-debian-x64.deb

# Install download manager
echo "Installing download manager..."
curl -fsSL https://raw.githubusercontent.com/amir1376/ab-download-manager/master/scripts/install.sh | bash

# Clone and build browser integration
echo "Building browser integration..."
git clone https://github.com/amir1376/ab-download-manager-browser-integration.git
cd ab-download-manager-browser-integration
npm i
npm run pack:chrome
cd ..
rm -rf ab-download-manager-browser-integration

# Download Warp
wget https://app.warp.dev/get_warp?package=deb

# Install Warp
sudo dpkg -i warp-terminal*.deb

# Remove installer
rm warp-terminal*.deb

echo "Warp installation complete!"

# Check if Alacritty is already installed
if command -v alacritty &> /dev/null; then
  echo "Alacritty is already installed. Exiting..."
  exit 0
fi

# Check if Rust and Cargo are installed
if ! command -v rustc &> /dev/null || ! command -v cargo &> /dev/null; then
  echo "Installing Rust and Cargo..."
  sudo apt install -y rustc cargo
fi

# Update package list
sudo apt update

# Install dependencies
sudo apt install -y \
    cmake \
    pkg-config \
    libfreetype6-dev \
    libfontconfig1-dev \
    libxcb-xfixes0-dev \
    libxcb-shape0-dev \
    libxcb-render0-dev \
    libxcb-randr0-dev \
    libxcb-image0-dev \
    libxcb-util0-dev \
    libxcb-icccm4-dev \
    libyajl-dev \
    libx11-xcb-dev \
    libxkbcommon-dev \
    libxkbcommon-x11-dev \
    libxcursor-dev \
    libxrender-dev \
    libxi-dev \
    libxinerama-dev \
    libxrandr-dev \
    libxdg-basedir-dev \
    libglew-dev \
    libwayland-dev \
    libwl-clipboard-dev

# Clone Alacritty repository
git clone https://github.com/alacritty/alacritty.git

# Build Alacritty with Wayland support
cd alacritty
cargo build --release --no-default-features --features=wayland

# Install Alacritty
sudo cp target/release/alacritty /usr/local/bin/

# Desktop Entry
sudo cp extra/logo/alacritty-term.svg /usr/share/pixmaps/Alacritty.svg
sudo desktop-file-install extra/linux/Alacritty.desktop
sudo update-desktop-database

# Install completions for zsh
mkdir -p ${ZDOTDIR:-~}/.zsh_functions
echo 'fpath+=${ZDOTDIR:-~}/.zsh_functions' >> ${ZDOTDIR:-~}/.zshrc
cp extra/completions/_alacritty ${ZDOTDIR:-~}/.zsh_functions/_alacritty

echo "Alacritty installation complete!"

# Configure Alacritty themes
mkdir -p ~/.config/alacritty/themes
git clone https://github.com/alacritty/alacritty-theme ~/.config/alacritty/themes

# Update Alacritty config
echo "[general]
import = [
    \"~/.config/alacritty/themes/themes/tokyo_night_enhanced.toml\"
]" > ~/.config/alacritty/alacritty.yml

echo "Alacritty installation and configuration complete!"
echo "Installation complete!"
